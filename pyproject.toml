[project]
name = "autotrader-pro"
version = "1.0.0"
description = "Professional Automated Trading System with ML and Advanced Risk Management"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    # Core dependencies
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-dotenv>=1.0.0",
    # Async and scheduling
    "apscheduler>=3.10.0",
    "aiofiles>=23.0.0",
    # Database
    "sqlmodel>=0.0.14",
    "alembic>=1.12.0",
    # Data analysis and ML
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scikit-learn>=1.3.0",
    "ta>=0.10.0",
    # Financial data
    "yfinance>=0.2.0",
    "alpaca-py>=0.7.0",
    # HTTP and API
    "httpx>=0.25.0",
    "requests>=2.31.0",
    "requests-cache>=1.1.0",
    "requests-ratelimiter>=0.4.0",
    # Web framework
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    # Configuration and utilities
    "pyyaml>=6.0",
    "arrow>=1.2.3",
    "pendulum>=3.1.0",
    # Logging
    "structlog>=23.0.0",
    "json-log-formatter>=0.5.0",
    # Dashboard and visualization
    "streamlit>=1.28.0",
    "plotly>=5.17.0",
    "dash>=2.14.0",
    "dash-bootstrap-components>=1.5.0",
    "prophet>=1.1.7",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

dashboard = [
    "streamlit>=1.28.0",
    "plotly>=5.17.0",
]

broker = [
    "alpaca-trade-api>=3.0.0",
    "requests>=2.31.0",
]

[project.scripts]
autotrader = "src.main_automated:main"

[tool.ruff]
line-length = 180
target-version = "py313"

[tool.ruff.lint]
select = ["E", "W", "F", "I", "N", "UP", "ANN", "S", "B", "A", "COM", "C4", "DTZ", "T10", "EM", "EXE", "ISC", "ICN", "G", "INP", "PIE", "T20", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = [
    # Type annotations - reduce burden on existing code
    "ANN101", "ANN102", "ANN201", "ANN202", "ANN204", "ANN001", "ANN002", "ANN003", "ANN401",
    # Logging and string formatting - performance over style
    "G004", "TRY401",
    # Import and code style
    "COM812", "ISC001", "TID252",
    # Exception handling - too restrictive for existing code
    "TRY300", "TRY301", "B904",
    # Security - too restrictive for development code
    "S104", "S603", "S607", "S608", "S105", "S112",
    # Magic values and complexity
    "PLR2004", "PLR0911", "PLR0912", "PLR0913",
    # Unused arguments in interface methods
    "ARG001", "ARG002",
    # Datetime without timezone (often not needed for trading apps)
    "DTZ005", "DTZ007",
    # Path operations - existing code compatibility
    "PTH100", "PTH120",
    # Pandas and other specific rules
    "PD901",
    # Miscellaneous style issues
    "N806", "N817", "B018", "SIM102", "UP035", "PLW0603", "PLW2901", "RUF012"
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "--strict-markers --disable-warnings"

[tool.uv]
dev-dependencies = [
    "hypothesis",
    "pre-commit>=3.0.0",
    "pytest>=7.0.0",
    "pytest-mock",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]
